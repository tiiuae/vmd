/*
 * Virtual Machine Management API of the Ghaf platform - OpenAPI
 *
 * OpenAPI specification for virtual machine management on Ghaf platform
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: nikita.bazulin@unikie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VirtualMachineInfo {
    #[serde(rename = "basicDetails")]
    pub basic_details: Box<crate::models::VirtualMachineBasicDetails>,
    #[serde(rename = "hypervisorDetails", skip_serializing_if = "Option::is_none")]
    pub hypervisor_details: Option<Box<crate::models::VirtualMachineHypervisorDetails>>,
    #[serde(rename = "cpu")]
    pub cpu: Box<crate::models::VirtualMachineCpu>,
    #[serde(rename = "memory")]
    pub memory: Box<crate::models::VirtualMachineMemory>,
    #[serde(rename = "startTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<Option<serde_json::Value>>,
    #[serde(rename = "runningTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub running_time: Option<Option<serde_json::Value>>,
    #[serde(rename = "os")]
    pub os: Box<crate::models::VirtualMachineOs>,
    #[serde(rename = "performance", skip_serializing_if = "Option::is_none")]
    pub performance: Option<Box<crate::models::VirtualMachinePerformance>>,
    #[serde(rename = "devices", skip_serializing_if = "Option::is_none")]
    pub devices: Option<Box<crate::models::VirtualMachineDevices>>,
}

impl VirtualMachineInfo {
    pub fn new(basic_details: crate::models::VirtualMachineBasicDetails, cpu: crate::models::VirtualMachineCpu, memory: crate::models::VirtualMachineMemory, os: crate::models::VirtualMachineOs) -> VirtualMachineInfo {
        VirtualMachineInfo {
            basic_details: Box::new(basic_details),
            hypervisor_details: None,
            cpu: Box::new(cpu),
            memory: Box::new(memory),
            start_time: None,
            running_time: None,
            os: Box::new(os),
            performance: None,
            devices: None,
        }
    }
}


