/*
 * Virtual Machine Management API of the Ghaf platform - OpenAPI
 *
 * OpenAPI specification for virtual machine management on Ghaf platform
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: nikita.bazulin@unikie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VirtualMachineHypervisorDetails {
    #[serde(rename = "hypervisor", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub hypervisor: Option<Option<Hypervisor>>,
    #[serde(rename = "arch", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub arch: Option<Option<serde_json::Value>>,
    #[serde(rename = "emulator", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub emulator: Option<Option<serde_json::Value>>,
    #[serde(rename = "chipset", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub chipset: Option<Option<serde_json::Value>>,
    #[serde(rename = "firmware", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub firmware: Option<Option<serde_json::Value>>,
}

impl VirtualMachineHypervisorDetails {
    pub fn new() -> VirtualMachineHypervisorDetails {
        VirtualMachineHypervisorDetails {
            hypervisor: None,
            arch: None,
            emulator: None,
            chipset: None,
            firmware: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Hypervisor {
    #[serde(rename = "KVM")]
    Kvm,
}

impl Default for Hypervisor {
    fn default() -> Hypervisor {
        Self::Kvm
    }
}

